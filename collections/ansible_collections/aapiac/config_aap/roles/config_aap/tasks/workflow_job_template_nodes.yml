---
#https://docs.ansible.com/ansible/2.10/collections/awx/awx/tower_workflow_job_template_node_module.html#ansible-collections-awx-awx-tower-workflow-job-template-node-module
- block:
  - include_vars:
      file: "{{ item }}"
    loop:
      - "{{ dir_orgs_vars }}/configure_tower_credentials.yml"
      - "{{ dir_orgs_vars }}/configure_tower_general.yml"

  - name: "Read Workflow Nodes definitions"
    include_vars:
      file: "{{ item.src }}"
    with_filetree: "{{ dir_orgs_vars }}/{{ orgs }}/workflow_nodes/"
    when: item.state == 'file'
    register: contents

  - name: "Populate Workflow Nodes list"
    set_fact:
      configure_tower_workflow_job_template_nodes: "{{ (configure_tower_workflow_job_template_nodes | default([])) + item.ansible_facts.nodes }}"
    loop: "{{ contents.results }}"
    when: contents.results is defined and item.ansible_facts is defined

  # - name: "Populate Workflow Nodes variable files list"
  #   set_fact:
  #     workflow_node_vars_files_list: "{{ (workflow_node_vars_files_list | default([])) + [item] }}"
  #   loop:
  #     # - "{{ lookup('fileglob', dir_orgs_vars + '/' + orgs + '/workflow_nodes/*', wantlist=True) }}"
  #     - "{{ lookup('fileglob', 'orgs_vars/OR-AL-TO-O-SGOP-DEF-COF-[SEGURIDAD OPERATIVA]/workflow_nodes/reboot_ibm_nonprod.yml', wantlist=True) }}"

  # - name:
  #   set_fact:
  #     configure_tower_workflow_job_template_nodes: "{{ (configure_tower_workflow_job_template_nodes | default([])) + (lookup('file', item, recursive=True)| from_yaml) }}"
  #   loop: "{{ workflow_node_vars_files_list }}"

  when: orgs is defined and dir_orgs_vars is defined

- name: "Create tower Workflow job template nodes"
  ansible.controller.tower_workflow_job_template_node:
    tower_username: "{{ configure_tower_username }}"
    tower_password: "{{ configure_tower_password }}"
    tower_host: "{{ configure_tower_server_url }}"
    validate_certs: "{{ configure_tower_validate_certs }}"
    identifier: "{{ item.identifier }}"
    workflow: "{{ item.workflow }}"
    unified_job_template: "{{ item.unified_job_template }}"
    organization: "{{ item.org | default(orgs) }}"
    success_nodes: "{{ item.success_nodes | default(omit) }}"
    failure_nodes: "{{ item.failure_nodes | default(omit) }}"
    always_nodes: "{{ item.always_nodes | default(omit) }}"
    all_parents_must_converge: "{{ item.all_parents_must_converge | default(false) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ configure_tower_workflow_job_template_nodes }}"
  when: configure_tower_workflow_job_template_nodes is defined
  delegate_to: "{{ 'localhost' if tower_local else omit }}"
...
