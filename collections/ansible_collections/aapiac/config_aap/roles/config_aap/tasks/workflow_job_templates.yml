---
- include_vars:
    file: "{{ item }}"
  loop:
    - "{{ dir_orgs_vars }}/configure_tower_credentials.yml"
    - "{{ dir_orgs_vars }}/configure_tower_general.yml"
    - "{{ dir_orgs_vars }}/{{ orgs }}/configure_tower_workflow_job_templates.yml"
  when: orgs is defined and dir_orgs_vars is defined

- block:
  - name: Get the current tower Workflow job templates
    ansible.controller.tower_export:
      tower_username: "{{ configure_tower_username }}"
      tower_password: "{{ configure_tower_password }}"
      tower_host: "{{ configure_tower_server_url }}"
      validate_certs: "{{ configure_tower_validate_certs }}"
      workflow_job_templates: 'all'
    register: current_workflow_job_templates

  - debug: var=current_workflow_job_templates

  - debug:
      msg: "{{ item.name }} -> {{ item.natural_key.organization.name | default('NO_ORGANIZATION') }}"
    loop: "{{ current_workflow_job_templates.assets.workflow_job_templates }}"

  - name: Map the currently existing information
    set_fact:
      current_info_for_workflow_job_templates: "{{ (current_info_for_workflow_job_templates | default([])) + [{ 'workflow_job_template': workflow_job_template_item.name, 'organization': (workflow_job_template_item.natural_key.organization.name | default('NO_ORGANIZATION'))}] }}"
    loop: "{{ current_workflow_job_templates.assets.workflow_job_templates }}"
    loop_control:
      loop_var: workflow_job_template_item
    ignore_errors: true

  - name: Show the currently existing Workflow job templates associated with it's organizations
    debug:
      msg:
        - "Current Info: {{ current_info_for_workflow_job_templates }}"
        - "IaC workflow_job_templates: {{ configure_tower_workflow_job_templates }}"
    when: current_info_for_workflow_job_templates is defined

  - name: Show the Workflow job templates not in IaC
    debug:
      msg:
        - "Project name: {{ current_info_item_for_workflow_job_templates.workflow_job_template }}"
        - "Project organization name: {{ current_info_item_for_workflow_job_templates.organization }}"
    vars:
      workflow_job_template_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_workflow_job_templates, test='match', value='^'+current_info_item_for_workflow_job_templates.workflow_job_template+'$', key='name', fail_on_missing='true', wantlist=True) }}"
      workflow_job_template_organization_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_workflow_job_templates, test='match', value='^'+current_info_item_for_workflow_job_templates.organization+'$', key='organization', fail_on_missing='true', wantlist=True) }}"
    loop: "{{ current_info_for_workflow_job_templates }}"
    loop_control:
      loop_var: current_info_item_for_workflow_job_templates
    when:
      - current_info_for_workflow_job_templates is defined
      - current_info_item_for_workflow_job_templates.organization is match('^'+orgs+'$')
      - (workflow_job_template_organization_index | intersect(workflow_job_template_index)) == []

  - name: Remove the Workflow job templates not in IaC
    ansible.controller.tower_workflow_job_template:
      tower_username: "{{ configure_tower_username }}"
      tower_password: "{{ configure_tower_password }}"
      tower_host: "{{ configure_tower_server_url }}"
      validate_certs: "{{ configure_tower_validate_certs }}"
      name: "{{ remove_workflow_job_template_item.workflow_job_template }}"
      organization: "{{ remove_workflow_job_template_item.organization }}"
      state: absent
    vars:
      workflow_job_template_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_workflow_job_templates, test='match', value='^'+remove_workflow_job_template_item.workflow_job_template+'$', key='name', fail_on_missing='true', wantlist=True) }}"
      workflow_job_template_organization_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_workflow_job_templates, test='match', value='^'+remove_workflow_job_template_item.organization+'$', key='organization', fail_on_missing='true', wantlist=True) }}"
    loop: "{{ current_info_for_workflow_job_templates }}"
    loop_control:
      loop_var: remove_workflow_job_template_item
    when:
      - current_info_for_workflow_job_templates is defined
      - remove_workflow_job_template_item.organization is match('^'+orgs+'$')
      - (workflow_job_template_organization_index | intersect(workflow_job_template_index)) == []

  when:
    - desired_state is defined
    - desired_state | bool

- name: "Create tower Workflow job templates"
  ansible.controller.tower_workflow_job_template:
    tower_username: "{{ configure_tower_username }}"
    tower_password: "{{ configure_tower_password }}"
    tower_host: "{{ configure_tower_server_url }}"
    validate_certs: "{{ configure_tower_validate_certs }}"
    name: "{{ item.name }}"
    description: "{{ item.description | default(omit) }}"
    organization: "{{ item.org | default(orgs) }}"
    state: "{{ item.state | default('present') }}"
    survey_enabled: "{{ item.survey_enabled | default('no') }}"
    survey: "{{ lookup('file', dir_orgs_vars + '/' + orgs + '/surveys/' + item.survey_file) if item.survey_file is defined else omit }}"
    extra_vars: "{{ (lookup('file', item.extra_vars_path) | from_yaml) if item.extra_vars_path is defined else omit }}"
    ask_variables_on_launch: "{{ item.ask_variables_on_launch | default(omit) }}"
    allow_simultaneous: "{{ item.allow_simultaneous | default(omit) }}"
    scm_branch: "{{ item.scm_branch | default(omit) }}"
  loop: "{{ configure_tower_workflow_job_templates }}"
  when: configure_tower_workflow_job_templates is defined
  delegate_to: "{{ 'localhost' if tower_local else omit }}"
  async: 1000
  poll: 0
  register: workflowjobtemplates1

- name: "Configure Tower Workflow job templates | Wait for finish the workflow job templates creation"
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: workflowjobtemplates1_result
  until: workflowjobtemplates1_result.finished
  retries: 10
  loop: "{{ workflowjobtemplates1.results }}"
  delegate_to: "{{ 'localhost' if tower_local else omit }}"
...
