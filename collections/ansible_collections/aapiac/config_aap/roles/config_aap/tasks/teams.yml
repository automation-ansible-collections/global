---
# tasks file for tower_ldap_settings
- include_vars:
    file: "{{ item }}"
  loop:
    - "{{ dir_orgs_vars }}/configure_tower_general.yml"
    - "{{ dir_orgs_vars }}/configure_tower_credentials.yml"
    - "{{ dir_orgs_vars }}/{{ orgs }}/configure_tower_teams.yml"
  when: orgs is defined and dir_orgs_vars is defined

- block:
  - name: Get the current tower teams
    ansible.controller.tower_export:
      tower_username: "{{ configure_tower_username }}"
      tower_password: "{{ configure_tower_password }}"
      tower_host: "{{ configure_tower_server_url }}"
      validate_certs: "{{ configure_tower_validate_certs }}"
      teams: 'all'
    register: current_teams

  - debug:
      msg: "{{ item.name }} -> {{ item.organization.name }}"
    loop: "{{ current_teams.assets.teams }}"

  - name: Map the currently existing information
    set_fact:
      current_info_for_teams: "{{ (current_info_for_teams | default([])) + [{ 'team': team_item.name, 'organization': team_item.organization.name}] }}"
    loop: "{{ current_teams.assets.teams }}"
    loop_control:
      loop_var: team_item
    ignore_errors: true

  - name: Show the currently existing teams associated with it's organizations
    debug:
      msg:
        - "Current Info: {{ current_info_for_teams }}"
        - "IaC teams: {{ configure_tower_teams }}"
    when: current_info_for_teams is defined

  - name: Show the teams not in IaC
    debug:
      msg:
        - "Project name: {{ current_info_item_for_teams.team }}"
        - "Project organization name: {{ current_info_item_for_teams.organization }}"
    vars:
      team_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_teams, test='match', value='^'+current_info_item_for_teams.team+'$', key='name', fail_on_missing='true', wantlist=True) }}"
      team_organization_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_teams, test='match', value='^'+current_info_item_for_teams.organization+'$', key='organization', fail_on_missing='true', wantlist=True) }}"
    loop: "{{ current_info_for_teams }}"
    loop_control:
      loop_var: current_info_item_for_teams
    when:
      - current_info_for_teams is defined
      - current_info_item_for_teams.organization is match('^'+orgs+'$')
      - (team_organization_index | intersect(team_index)) == []

  - name: Remove the teams not in IaC
    ansible.controller.tower_team:
      tower_username: "{{ configure_tower_username }}"
      tower_password: "{{ configure_tower_password }}"
      tower_host: "{{ configure_tower_server_url }}"
      validate_certs: "{{ configure_tower_validate_certs }}"
      name: "{{ remove_team_item.team }}"
      organization: "{{ remove_team_item.organization }}"
      state: absent
    vars:
      team_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_teams, test='match', value='^'+remove_team_item.team+'$', key='name', fail_on_missing='true', wantlist=True) }}"
      team_organization_index: "{{ lookup('ansible.utils.index_of', data=configure_tower_teams, test='match', value='^'+remove_team_item.organization+'$', key='organization', fail_on_missing='true', wantlist=True) }}"
    loop: "{{ current_info_for_teams }}"
    loop_control:
      loop_var: remove_team_item
    when:
      - current_info_for_teams is defined
      - remove_team_item.organization is match('^'+orgs+'$')
      - (team_organization_index | intersect(team_index)) == []

  when:
    - desired_state is defined
    - desired_state | bool

- name: Configure Tower teams
  ansible.controller.tower_team:
    tower_username: "{{ configure_tower_username }}"
    tower_password: "{{ configure_tower_password }}"
    tower_host: "{{ configure_tower_server_url }}"
    validate_certs: "{{ configure_tower_validate_certs }}"
    name: "{{ item.name }}"
    description: "{{ item.description  }}"
    organization: "{{ orgs }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ configure_tower_teams }}"
  when: configure_tower_teams is defined
  delegate_to: "{{ 'localhost' if tower_local else omit }}"
