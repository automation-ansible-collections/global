---
- hosts: localhost
  connection: local
  gather_facts: false
  #collections:
  #  - ansible.controller
  #  - redhat_cop.controller_configuration
  vars:
    controller_configuration_projects_async_retries: 60
    controller_configuration_projects_async_delay: 2
    controller_configuration_credentials_secure_logging: false
    controller_username: "{{ vault_controller_username | default(lookup('env', 'CONTROLLER_USERNAME')) }}"
    controller_password: "{{ vault_controller_password | default(lookup('env', 'CONTROLLER_PASSWORD')) }}"
    controller_hostname: "{{ vault_controller_hostname | default(lookup('env', 'CONTROLLER_HOST')) }}"
    controller_validate_certs: "{{ vault_controller_validate_certs | default(lookup('env', 'CONTROLLER_VERIFY_SSL')) }}"
  pre_tasks:
    - block:
        - name: Populate users list from LDAP
          set_fact:
            ldap_users:
              - ldap_user: ldap-user01
                ldap_password: redhat00
              - ldap_user: ldap-user02
                ldap_password: redhat00
              - ldap_user: ldap-admin01
                ldap_password: redhat00
              - ldap_user: ldap-admin02
                ldap_password: redhat00
              - ldap_user: ldap-cmdb01
                ldap_password: redhat00

        - name: Login Users from LDAP
          uri:
            url: "https://{{ controller_hostname }}/api/v2/me/"
            user: "{{ item.ldap_user }}"
            password: "{{ item.ldap_password }}"
            method: GET
            force_basic_auth: yes
            status_code: 200
            validate_certs: false
          loop: "{{ ldap_users }}"
          no_log: false
      tags:
        - always

    - block:
        - name: Include Tasks to load Galaxy credentials to be added to Organizations
          ansible.builtin.include_role:
            name: redhat_cop.controller_configuration.filetree_read
            tasks_from: "{{ create_orgs_credentials }}"
          loop:
            - organizations.yml
            - credentials.yml
          loop_control:
            loop_var: create_orgs_credentials

        - name: Include Tasks to add Galaxy credentials to Organizations
          ansible.builtin.include_role:
            name: redhat_cop.controller_configuration.dispatch
            apply:
              tags:
                - organizations
                - credentials
          vars:
            assign_galaxy_credentials_to_org: false
            controller_configuration_dispatcher_roles:
              - {role: organizations, var: controller_organizations, tags: organizations}
              - {role: credentials, var: controller_credentials, tags: credentials}

  roles:
    # - {role: redhat_cop.controller_configuration.filetree_read, assign_galaxy_credentials_to_org: false}
    # - {role: redhat_cop.controller_configuration.dispatch, assign_galaxy_credentials_to_org: false}
    - {role: redhat_cop.controller_configuration.filetree_read }
    - {role: redhat_cop.controller_configuration.dispatch }

#  post_tasks:
#    - block:
#        - name: Include Tasks to load Galaxy credentials to be added to Organizations
#          ansible.builtin.include_role:
#            name: redhat_cop.controller_configuration.filetree_read
#            tasks_from: organizations.yml
#
#        - name: Include Tasks to add Galaxy credentials to Organizations
#          ansible.builtin.include_role:
#            name: redhat_cop.controller_configuration.dispatch
#            apply:
#              tags:
#                - organizations
#          vars:
#            controller_configuration_dispatcher_roles:
#              - {role: organizations, var: controller_organizations, tags: organizations}
#      tags:
#        - organizations
...
